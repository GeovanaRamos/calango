package tcccalango.util.rsyntaxarea;

import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import javax.swing.text.Segment;
import org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker;
import org.fife.ui.rsyntaxtextarea.DefaultToken;
import org.fife.ui.rsyntaxtextarea.Token;

public class CalangoTokenMaker extends AbstractJFlexCTokenMaker {
    public static final int YYEOF = -1;
    private static final int ZZ_BUFFERSIZE = 16384;
    public static final int EOL_COMMENT = 2;
    public static final int YYINITIAL = 0;
    public static final int MLC = 1;
    private static final String ZZ_CMAP_PACKED = "\t\u0000\u0001\u0011\u0001\b\u0001\u0000\u0001\u0011\u0001\u000f\u0012\u0000\u0001\u0011\u0001\"\u0001\r\u0001\u0010\u0001\u0001\u0001\"\u0001\"\u0001\u0007\u0002#\u0001\u0013\u0001\u0019\u0001\"\u0001\u0019\u0001\u001a\u0001\u0012\u0001\u0004\u0003\u000e\u0004\u0006\u0002\u0003\u0001'\u0001\"\u0001\u000f\u0001\"\u0001\u000f\u0001\"\u0001\u0010\u0002\u0005\u00012\u0001\u0016\u0001\u0018\u0001/\u0005\u0001\u0001\u0015\u0003\u0001\u00010\u0002\u0001\u00011\u0004\u0001\u0001\u0014\u0002\u0001\u0001#\u0001\t\u0001#\u0001\u000f\u0001\u0002\u0001\u0000\u0001\u001e\u0001\f\u0001,\u0001-\u0001\u001d\u0001\u0017\u0001)\u0001$\u0001&\u0002\u0001\u0001\u001f\u0001+\u0001\u000b\u0001*\u0001%\u0001.\u0001\u001c\u0001 \u0001\u001b\u0001\n\u0001\u0001\u0001(\u00013\u0002\u0001\u0001!\u0001\u000f\u0001!\u0001\"ﾁ\u0000";
    private static final char[] ZZ_CMAP = zzUnpackCMap("\t\u0000\u0001\u0011\u0001\b\u0001\u0000\u0001\u0011\u0001\u000f\u0012\u0000\u0001\u0011\u0001\"\u0001\r\u0001\u0010\u0001\u0001\u0001\"\u0001\"\u0001\u0007\u0002#\u0001\u0013\u0001\u0019\u0001\"\u0001\u0019\u0001\u001a\u0001\u0012\u0001\u0004\u0003\u000e\u0004\u0006\u0002\u0003\u0001'\u0001\"\u0001\u000f\u0001\"\u0001\u000f\u0001\"\u0001\u0010\u0002\u0005\u00012\u0001\u0016\u0001\u0018\u0001/\u0005\u0001\u0001\u0015\u0003\u0001\u00010\u0002\u0001\u00011\u0004\u0001\u0001\u0014\u0002\u0001\u0001#\u0001\t\u0001#\u0001\u000f\u0001\u0002\u0001\u0000\u0001\u001e\u0001\f\u0001,\u0001-\u0001\u001d\u0001\u0017\u0001)\u0001$\u0001&\u0002\u0001\u0001\u001f\u0001+\u0001\u000b\u0001*\u0001%\u0001.\u0001\u001c\u0001 \u0001\u001b\u0001\n\u0001\u0001\u0001(\u00013\u0002\u0001\u0001!\u0001\u000f\u0001!\u0001\"ﾁ\u0000");
    private static final int[] ZZ_ACTION = zzUnpackAction();
    private static final String ZZ_ACTION_PACKED_0 = "\u0003\u0000\u0002\u0001\u0002\u0002\u0001\u0003\u0001\u0004\u0001\u0005\u0001\u0006\u0002\u0007\b\u0001\u0001\b\u0005\u0001\u0001\t\u0001\n\u0005\t\u0001\u000b\u0003\t\u0001\u0000\u0001\f\u0001\u0002\u0001\r\u0001\f\u0001\r\u0001\f\u0001\u000e\u0001\f\u0001\u0003\u0001\u000f\u0001\u0000\u0001\u0003\u0002\u0005\u0001\u0010\u0001\u0011\u0001\u0012\t\u0001\u0001\u0013\u0005\u0001\u0001\u0013\u0001\u0014\t\u0000\u0001\r\u0001\u0000\u0002\u000e\u0001\u0003\u0001\u0015\u0002\u0003\u0001\u000f\u0001\u0003\u0001\u0005\u0001\u0016\u0001\u0005\u0012\u0001\t\u0000\u0001\u0003\u0001\u0005\u0005\u0001\u0001\u0017\t\u0001\u0002\u0000\u0001\u0018\u0002\u0000\u0001\u0019\u0001\u0000\u0001\u0003\u0001\u0005\u000b\u0001\u0005\u0000\u0001\u0003\u0001\u0005\f\u0001";
    private static final int[] ZZ_ROWMAP = zzUnpackRowMap();
    private static final String ZZ_ROWMAP_PACKED_0 = "\u0000\u0000\u00004\u0000h\u0000\u009c\u0000Ð\u0000Ą\u0000ĸ\u0000Ŭ\u0000\u009c\u0000Ơ\u0000ǔ\u0000Ȉ\u0000\u009c\u0000ȼ\u0000ɰ\u0000ʤ\u0000˘\u0000̌\u0000̀\u0000ʹ\u0000Ψ\u0000\u009c\u0000Ϝ\u0000А\u0000ф\u0000Ѹ\u0000Ҭ\u0000Ӡ\u0000\u009c\u0000Ԕ\u0000Ո\u0000ռ\u0000ְ\u0000פ\u0000\u009c\u0000ؘ\u0000ٌ\u0000ڀ\u0000ڴ\u0000ۨ\u0000ۨ\u0000ۨ\u0000ܜ\u0000ݐ\u0000ބ\u0000\u07b8\u0000߬\u0000ࠠ\u0000\u009c\u0000ࡔ\u0000\u0888\u0000\u08bc\u0000ࣰ\u0000\u009c\u0000\u009c\u0000\u009c\u0000त\u0000क़\u0000ঌ\u0000ী\u0000৴\u0000ਨ\u0000ੜ\u0000ઐ\u0000ૄ\u0000\u0af8\u0000ବ\u0000ୠ\u0000ஔ\u0000ை\u0000\u0bfc\u0000Ð\u0000\u009c\u0000ర\u0000\u0c64\u0000ಘ\u0000ೌ\u0000\u0d00\u0000ഴ\u0000൨\u0000ග\u0000ැ\u0000ค\u0000ุ\u0000ۨ\u0000\u0e6c\u0000\u0ea0\u0000\u009c\u0000໔\u0000༈\u0000ࡔ\u0000༼\u0000\u0f70\u0000\u009c\u0000ྤ\u0000࿘\u0000ဌ\u0000၀\u0000ၴ\u0000Ⴈ\u0000ნ\u0000ᄐ\u0000ᅄ\u0000ᅸ\u0000ᆬ\u0000ᇠ\u0000ሔ\u0000ቈ\u0000ቼ\u0000ኰ\u0000ዤ\u0000ጘ\u0000ፌ\u0000ᎀ\u0000Ꮄ\u0000Ꮸ\u0000ᐜ\u0000ᑐ\u0000ᒄ\u0000ᒸ\u0000ᓬ\u0000ᔠ\u0000ᕔ\u0000ᖈ\u0000ᖼ\u0000ᗰ\u0000ᘤ\u0000ᙘ\u0000ᚌ\u0000Ð\u0000ᛀ\u0000\u16f4\u0000ᜨ\u0000\u175c\u0000ថ\u0000ោ\u0000៸\u0000ᠬ\u0000ᡠ\u0000ᢔ\u0000ᣈ\u0000\u18fc\u0000ᤰ\u0000ᥤ\u0000ᦘ\u0000\u19cc\u0000ᨀ\u0000ᨴ\u0000ᩨ\u0000\u1a9c\u0000\u1ad0\u0000ᬄ\u0000ᬸ\u0000᭬\u0000ᮠ\u0000ᯔ\u0000ᰈ\u0000᰼\u0000ᱰ\u0000\u1ca4\u0000\u18fc\u0000᳘\u0000ᦘ\u0000ᴌ\u0000ᵀ\u0000ᵴ\u0000ᶨ\u0000ᷜ\u0000Ḑ\u0000Ṅ\u0000Ṹ\u0000Ậ\u0000Ỡ\u0000ἔ\u0000Ὀ\u0000ὼ\u0000ᾰ\u0000ῤ";
    private static final int[] ZZ_TRANS = zzUnpackTrans();
    private static final String ZZ_TRANS_PACKED_0 = "\u0001\u0004\u0002\u0005\u0001\u0006\u0001\u0007\u0001\u0005\u0001\u0006\u0001\b\u0001\t\u0001\u0004\u0003\u0005\u0001\n\u0001\u0006\u0002\u0004\u0001\u000b\u0001\f\u0001\r\u0003\u0005\u0001\u000e\u0001\u0005\u0001\r\u0001\u000f\u0001\u0010\u0001\u0011\u0001\u0012\u0001\u0013\u0001\u0014\u0001\u0015\u0001\u0016\u0001\u0004\u0001\u0016\u0001\u0005\u0001\u0017\u0001\u0018\u0001\u0004\u0002\u0005\u0001\u0019\u0001\u0005\u0001\u001a\u0001\u001b\u0006\u0005\b\u001c\u0001\u001d\n\u001c\u0001\u001e\u0003\u001c\u0001\u001f\f\u001c\u0001 \u0003\u001c\u0001!\u000b\u001c\b\"\u0001#\u000e\"\u0001$\f\"\u0001%\u0003\"\u0001&\u000b\"5\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0003(\u0002\u0006\u0001(\u0001\u0006\u0002\u0000\u0004(\u0001\u0000\u0001\u0006\u0001\u0000\u0001(\u0003\u0000\u0001(\u0001)\u0002*\u0001+\u0001\u0000\u0001,\u0002(\u0001+\u0001(\u0001)\u0001(\u0003\u0000\u0003(\u0001\u0000\u0005(\u0001*\u0001(\u0001*\u0007(\u0001-\u0001.\u0001(\u0001.\u0002\u0000\u0004(\u0001\u0000\u0001.\u0001\u0000\u0001(\u0003\u0000\u0001/\u0001)\u0002*\u0001+\u0001\u0000\u0001,\u0002(\u0001+\u0001(\u0001)\u0001(\u0003\u0000\u0003(\u0001\u0000\u0005(\u0001*\u0001(\u0001*\u0003(\u0001/\u00070\u00011\u00012\u00013*0\b\n\u00014\u00015\u0003\n\u00016&\n\u0011\u0000\u0001\u000b4\u0000\u00017\u00018!\u0000\u0006\u0005\u0002\u0000\u0001'\u00019\u0002\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0003\u0005\u0001:\u0002\u0005\u0003\u0000\u0002\u0005\u0001;\u0001\u0000\f\u0005\u0003\u0000\u0002,\u0001\u0000\u0001,\u0007\u0000\u0001,&\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0002\u0005\u0001<\u0003\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0002\u0005\u0001=\u0003\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0001\u0005\u0001>\u0001\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0005\u0005\u0001?\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u001b\u0003\u0005\u0001@\u0001\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0002\u0005\u0001A\t\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0002\u0005\u0001B\u0003\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0005\u0001C\u0001\u0005\u0001D\u0002\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0001\u0005\u0001E\u0001\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0001F\u0002\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0003\u0005\u0001G\u0002\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0002\u0005\u0001H\u0003\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\b\u001c\u0001\u0000\n\u001c\u0001\u0000\u0003\u001c\u0001\u0000\f\u001c\u0001\u0000\u0003\u001c\u0001\u0000\u000b\u001c\u0012\u0000\u0001I<\u0000\u0001J\n\u0000\u0001K(\u0000\u0001L@\u0000\u0001M\u000b\u0000\b\"\u0001\u0000\u000e\"\u0001\u0000\f\"\u0001\u0000\u0003\"\u0001\u0000\u000b\"\u001b\u0000\u0001N\n\u0000\u0001O(\u0000\u0001P@\u0000\u0001Q\u0015\u0000\u0001R)\u0000\u0007(\u0002\u0000\u0004(\u0001\u0000\u0001(\u0001\u0000\u0001(\u0003\u0000\u0005(\u0002\u0000\u0006(\u0003\u0000\u0003(\u0001\u0000\u000f(\u0002S\u0001(\u0001S\u0002\u0000\u0004(\u0001\u0000\u0001S\u0001\u0000\u0001(\u0003\u0000\u0005(\u0001T\u0001\u0000\u0006(\u0003\u0000\u0003(\u0001\u0000\u000f(\u0002,\u0001(\u0001,\u0002\u0000\u0004(\u0001\u0000\u0001,\u0001\u0000\u0001(\u0003\u0000\u0002(\u0002*\u0001+\u0002\u0000\u0002(\u0001+\u0003(\u0003\u0000\u0003(\u0001\u0000\u0005(\u0001*\u0001(\u0001*\u0007(\u0002-\u0001(\u0001-\u0002\u0000\u0004(\u0001\u0000\u0001-\u0001\u0000\u0001(\u0003\u0000\u0002(\u0002*\u0001+\u0001\u0000\u0001,\u0002(\u0001+\u0003(\u0003\u0000\u0003(\u0001\u0000\u0005(\u0001*\u0001(\u0001*\u0007(\u0001-\u0001.\u0001(\u0001.\u0002\u0000\u0004(\u0001\u0000\u0001.\u0001\u0000\u0001(\u0003\u0000\u0001(\u0001U\u0002*\u0001+\u0001\u0000\u0001,\u0002(\u0001+\u0001(\u0001U\u0001(\u0003\u0000\u0003(\u0001\u0000\u0005(\u0001*\u0001(\u0001*\u0007(\u0004V\u0002\u0000\u0003(\u0001V\u0001\u0000\u0001V\u0001\u0000\u0001(\u0003\u0000\u0002(\u0003V\u0002\u0000\u0002(\u0002V\u0002(\u0003\u0000\u0003(\u0001\u0000\u0004(\u0002V\u0001(\u0001V\u0002(\u0001V\u0001(\u0007W\u0001X\u0001\u0000+W\u0007\u0000\u0001X,\u0000\u0004W\u0001Y\u0001W\u0001Z\u0001[\u0001\u0000\u00010\u0001\\\u00030\u0001Y\bW\u00010\u0003W\u00020\u0017W\t4\u0001]\u00034\u0001^*4\u0001\n\u00014\u0002\n\u0001\u0000\u0001\n\u0001_\u0004\n\b4\u0001\n\u00034\u0002\n\u00174\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0001\u0005\u0001`\u0001\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0004\u0005\u0001a\u0007\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0003\u0005\u0001b\b\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u000b\u0005\u0001c\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001d\u0002\u0005\u0001e\u0002\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001f\u0005\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0006\u0005\u0001g\u0005\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0004\u0005\u0001h\u0007\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0001\u0005\u0001i\n\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0001\u0005\u0001j\n\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0001\u0005\u0001f\u0001\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0002\u0005\u0001k\u0001\u0000\u0002\u0005\u0001l\t\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0005\u0001a\u0003\u0005\u0001m\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001n\u0005\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001o\u0005\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0005\u0001p\u0003\u0005\u0001q\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005%\u0000\u0001r-\u0000\u0001s/\u0000\u0001t@\u0000\u0001u0\u0000\u0001v-\u0000\u0001w/\u0000\u0001x@\u0000\u0001y\u000e\u0000\u0004z\u0005\u0000\u0001z\u0001\u0000\u0001z\u0007\u0000\u0003z\u0004\u0000\u0002z\r\u0000\u0002z\u0001\u0000\u0001z\u0002\u0000\u0001z\u0001\u0000\u0003(\u0002S\u0001(\u0001S\u0002\u0000\u0004(\u0001\u0000\u0001S\u0001\u0000\u0001(\u0003\u0000\u0002(\u0002*\u0001(\u0002\u0000\u0006(\u0003\u0000\u0003(\u0001\u0000\u0005(\u0001*\u0001(\u0001*\u0004(\u0003\u0000\u0002S\u0001\u0000\u0001S\u0007\u0000\u0001S%\u0000\u0003(\u0004V\u0002\u0000\u0003(\u0001V\u0001\u0000\u0001V\u0001\u0000\u0001(\u0003\u0000\u0001(\u0001U\u0003V\u0002\u0000\u0002(\u0002V\u0001U\u0001(\u0003\u0000\u0003(\u0001\u0000\u0004(\u0002V\u0001(\u0001V\u0002(\u0001V\u0001(\u0007W\u00011\u0001\u0000/W\u0001Z\u0001W\u0001Z\u0001X\u0001\u0000\u0005W\u0001Z)W\u00010\u0001W\u00010\u0001X\u0001\u0000\u0005W\u00010(W\u0004{\u00011\u0001\u0000\u0003W\u0001{\u0001W\u0001{\u0007W\u0003{\u0004W\u0002{\rW\u0002{\u0001W\u0001{\u0002W\u0001{\u0001W\b4\u0001\u0000.4\u0004|\u00024\u0001]\u00024\u0001|\u0001^\u0001|\u00074\u0003|\u00044\u0002|\r4\u0002|\u00014\u0001|\u00024\u0001|\u00014\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0004\u0005\u0001f\u0007\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0003\u0005\u0001H\u0002\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0004\u0005\u0001}\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0007\u0005\u0001~\u0001\u007f\u0001\u001b\u0002\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0080\u0005\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0002\u0005\u0001\u0081\t\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0004\u0005\u0001\u0082\u0001\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0003\u0005\u0001q\u0002\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0001\u0083\u0002\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0002\u0005\u0001\u0084\t\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0002\u0005\u0001\u0085\t\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0002\u0005\u0001\u0086\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0001\u0005\u0001\u0087\u0001\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0004\u0005\u0001\u0088\u0007\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0005\u0005\u0001q\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0002\u0005\u0001\u0089\u0003\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0005\u0001\u008a\u0004\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0003\u0005\u0001\u008b\u0002\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0002\u0005\u0001H\t\u0005'\u0000\u0001\u008c)\u0000\u0001r;\u0000\u0001\u008d(\u0000\u0001\u008e@\u0000\u0001\u008f)\u0000\u0001v;\u0000\u0001\u0090(\u0000\u0001\u0091\u001c\u0000\u0004\u0092\u0005\u0000\u0001\u0092\u0001\u0000\u0001\u0092\u0007\u0000\u0003\u0092\u0004\u0000\u0002\u0092\r\u0000\u0002\u0092\u0001\u0000\u0001\u0092\u0002\u0000\u0001\u0092\u0001\u0000\u0003W\u0004\u0093\u00011\u0001\u0000\u0003W\u0001\u0093\u0001W\u0001\u0093\u0007W\u0003\u0093\u0004W\u0002\u0093\rW\u0002\u0093\u0001W\u0001\u0093\u0002W\u0001\u0093\u0001W\u00034\u0004\u0094\u00024\u0001]\u00024\u0001\u0094\u0001^\u0001\u0094\u00074\u0003\u0094\u00044\u0002\u0094\r4\u0002\u0094\u00014\u0001\u0094\u00024\u0001\u0094\u00014\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0001\u0005\u0001\u0095\u0001\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0005\u0005\u0001?\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u00019\u0002\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0005\u0001C\u0001\u0005\u0001\u0096\u0002\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0002\u0005\u0001\u0082\t\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0005\u0001\u0097\u0004\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0003\u0005\u0001\u0098\u0002\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0004\u0005\u0001\u0099\u0001\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0005\u0001\u009a\u0004\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0004\u0005\u0001\u0080\u0007\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0004\u0005\u0001\u009b\u0007\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0002\u0005\u0001\u009c\u0003\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0002\u0005\u0001\u009d\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0002\u0005\u0001\u009e\t\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0004\u0005\u0001\u009f\u0007\u0005\u0012\u0000\u0001 A\u0000\u0001r\u0006\u0000\u0001\u008c\r\u0000\u0001\u008e\u0001¡\u0004\u008e\u0001¡\u0002\u0000\u0003\u008e\u0001\u0000\u0001\u008e\u0001\u0000\u0001¡\u0001\u0000\u0001\u008e\u0001¡\u0005\u008e\u0002¡\u0006\u008e\u0001\u0000\u0002¡\u0003\u008e\u0001¡\f\u008e\u0012\u0000\u0001¢A\u0000\u0001v\u0006\u0000\u0001\u008f\r\u0000\u0001\u0091\u0001£\u0004\u0091\u0001£\u0002\u0000\u0003\u0091\u0001\u0000\u0001\u0091\u0001\u0000\u0001£\u0001\u0000\u0001\u0091\u0001£\u0005\u0091\u0002£\u0006\u0091\u0001\u0000\u0002£\u0003\u0091\u0001£\f\u0091\u0003\u0000\u0004¤\u0005\u0000\u0001¤\u0001\u0000\u0001¤\u0007\u0000\u0003¤\u0004\u0000\u0002¤\r\u0000\u0002¤\u0001\u0000\u0001¤\u0002\u0000\u0001¤\u0001\u0000\u0003W\u0004¥\u00011\u0001\u0000\u0003W\u0001¥\u0001W\u0001¥\u0007W\u0003¥\u0004W\u0002¥\rW\u0002¥\u0001W\u0001¥\u0002W\u0001¥\u0001W\u00034\u0004¦\u00024\u0001]\u00024\u0001¦\u0001^\u0001¦\u00074\u0003¦\u00044\u0002¦\r4\u0002¦\u00014\u0001¦\u00024\u0001¦\u00014\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0006\u0005\u0001g\u0005\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0005\u0001a\u0004\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0001\u0005\u0001a\u0001\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0001\u0005\u0001§\u0001\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0001a\u0002\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0002\u0005\u0001¨\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0002\u0005\u0001©\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0005\u0005\u0001ª\u0006\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0005\u0001\u0080\u0004\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\n\u0005\u0001«\u0001\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001¬\u0005\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0012\u0000\u0001\u008e3\u0000\u0001\u0091$\u0000\u0004\u0005\u0005\u0000\u0001\u0005\u0001\u0000\u0001\u0005\u0007\u0000\u0003\u0005\u0004\u0000\u0002\u0005\r\u0000\u0002\u0005\u0001\u0000\u0001\u0005\u0002\u0000\u0001\u0005\u0001\u0000\u0003W\u00040\u00011\u0001\u0000\u0003W\u00010\u0001W\u00010\u0007W\u00030\u0004W\u00020\rW\u00020\u0001W\u00010\u0002W\u00010\u0001W\u00034\u0004\n\u00024\u0001]\u00024\u0001\n\u0001^\u0001\n\u00074\u0003\n\u00044\u0002\n\r4\u0002\n\u00014\u0001\n\u00024\u0001\n\u00014\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001q\u0005\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u00ad\u0005\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0001\u0005\u0001®\u0001\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0002\u0005\u0001¯\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0003\u0005\u0001m\u0002\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0002\u0005\u0001°\u0003\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0003\u0005\u0001q\b\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0003\u0005\u0001±\u0002\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0003\u0005\u0001²\b\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0005\u0001\u0082\u0004\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0004\u0005\u0001H\u0001\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0002\u0005\u0001\u0098\u0003\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005";
    private static final int ZZ_UNKNOWN_ERROR = 0;
    private static final int ZZ_NO_MATCH = 1;
    private static final int ZZ_PUSHBACK_2BIG = 2;
    private static final String[] ZZ_ERROR_MSG = new String[]{"Unkown internal scanner error", "Error: could not match input", "Error: pushback value was too large"};
    private static final int[] ZZ_ATTRIBUTE = zzUnpackAttribute();
    private static final String ZZ_ATTRIBUTE_PACKED_0 = "\u0003\u0000\u0001\t\u0004\u0001\u0001\t\u0003\u0001\u0001\t\b\u0001\u0001\t\u0006\u0001\u0001\t\u0005\u0001\u0001\t\u0003\u0001\u0001\u0000\t\u0001\u0001\t\u0001\u0000\u0003\u0001\u0003\t\u0010\u0001\u0001\t\t\u0000\u0001\u0001\u0001\u0000\u0003\u0001\u0001\t\u0005\u0001\u0001\t\u0013\u0001\t\u0000\u0011\u0001\u0002\u0000\u0001\u0001\u0002\u0000\u0001\u0001\u0001\u0000\r\u0001\u0005\u0000\u000e\u0001";
    private Reader zzReader;
    private int zzState;
    private int zzLexicalState;
    private char[] zzBuffer;
    private int zzMarkedPos;
    private int zzPushbackPos;
    private int zzCurrentPos;
    private int zzStartRead;
    private int zzEndRead;
    private int yyline;
    private int yychar;
    private int yycolumn;
    private boolean zzAtBOL;
    private boolean zzAtEOF;

    private static int[] zzUnpackAction() {
        int[] result = new int[178];
        int offset = 0;
        zzUnpackAction("\u0003\u0000\u0002\u0001\u0002\u0002\u0001\u0003\u0001\u0004\u0001\u0005\u0001\u0006\u0002\u0007\b\u0001\u0001\b\u0005\u0001\u0001\t\u0001\n\u0005\t\u0001\u000b\u0003\t\u0001\u0000\u0001\f\u0001\u0002\u0001\r\u0001\f\u0001\r\u0001\f\u0001\u000e\u0001\f\u0001\u0003\u0001\u000f\u0001\u0000\u0001\u0003\u0002\u0005\u0001\u0010\u0001\u0011\u0001\u0012\t\u0001\u0001\u0013\u0005\u0001\u0001\u0013\u0001\u0014\t\u0000\u0001\r\u0001\u0000\u0002\u000e\u0001\u0003\u0001\u0015\u0002\u0003\u0001\u000f\u0001\u0003\u0001\u0005\u0001\u0016\u0001\u0005\u0012\u0001\t\u0000\u0001\u0003\u0001\u0005\u0005\u0001\u0001\u0017\t\u0001\u0002\u0000\u0001\u0018\u0002\u0000\u0001\u0019\u0001\u0000\u0001\u0003\u0001\u0005\u000b\u0001\u0005\u0000\u0001\u0003\u0001\u0005\f\u0001", offset, result);
        return result;
    }

    private static int zzUnpackAction(String packed, int offset, int[] result) {
        int i = 0;
        int j = offset;
        int l = packed.length();

        while(i < l) {
            int count = packed.charAt(i++);
            char value = packed.charAt(i++);

            while(true) {
                result[j++] = value;
                --count;
                if (count <= 0) {
                    break;
                }
            }
        }

        return j;
    }

    private static int[] zzUnpackRowMap() {
        int[] result = new int[178];
        int offset = 0;
        zzUnpackRowMap("\u0000\u0000\u00004\u0000h\u0000\u009c\u0000Ð\u0000Ą\u0000ĸ\u0000Ŭ\u0000\u009c\u0000Ơ\u0000ǔ\u0000Ȉ\u0000\u009c\u0000ȼ\u0000ɰ\u0000ʤ\u0000˘\u0000̌\u0000̀\u0000ʹ\u0000Ψ\u0000\u009c\u0000Ϝ\u0000А\u0000ф\u0000Ѹ\u0000Ҭ\u0000Ӡ\u0000\u009c\u0000Ԕ\u0000Ո\u0000ռ\u0000ְ\u0000פ\u0000\u009c\u0000ؘ\u0000ٌ\u0000ڀ\u0000ڴ\u0000ۨ\u0000ۨ\u0000ۨ\u0000ܜ\u0000ݐ\u0000ބ\u0000\u07b8\u0000߬\u0000ࠠ\u0000\u009c\u0000ࡔ\u0000\u0888\u0000\u08bc\u0000ࣰ\u0000\u009c\u0000\u009c\u0000\u009c\u0000त\u0000क़\u0000ঌ\u0000ী\u0000৴\u0000ਨ\u0000ੜ\u0000ઐ\u0000ૄ\u0000\u0af8\u0000ବ\u0000ୠ\u0000ஔ\u0000ை\u0000\u0bfc\u0000Ð\u0000\u009c\u0000ర\u0000\u0c64\u0000ಘ\u0000ೌ\u0000\u0d00\u0000ഴ\u0000൨\u0000ග\u0000ැ\u0000ค\u0000ุ\u0000ۨ\u0000\u0e6c\u0000\u0ea0\u0000\u009c\u0000໔\u0000༈\u0000ࡔ\u0000༼\u0000\u0f70\u0000\u009c\u0000ྤ\u0000࿘\u0000ဌ\u0000၀\u0000ၴ\u0000Ⴈ\u0000ნ\u0000ᄐ\u0000ᅄ\u0000ᅸ\u0000ᆬ\u0000ᇠ\u0000ሔ\u0000ቈ\u0000ቼ\u0000ኰ\u0000ዤ\u0000ጘ\u0000ፌ\u0000ᎀ\u0000Ꮄ\u0000Ꮸ\u0000ᐜ\u0000ᑐ\u0000ᒄ\u0000ᒸ\u0000ᓬ\u0000ᔠ\u0000ᕔ\u0000ᖈ\u0000ᖼ\u0000ᗰ\u0000ᘤ\u0000ᙘ\u0000ᚌ\u0000Ð\u0000ᛀ\u0000\u16f4\u0000ᜨ\u0000\u175c\u0000ថ\u0000ោ\u0000៸\u0000ᠬ\u0000ᡠ\u0000ᢔ\u0000ᣈ\u0000\u18fc\u0000ᤰ\u0000ᥤ\u0000ᦘ\u0000\u19cc\u0000ᨀ\u0000ᨴ\u0000ᩨ\u0000\u1a9c\u0000\u1ad0\u0000ᬄ\u0000ᬸ\u0000᭬\u0000ᮠ\u0000ᯔ\u0000ᰈ\u0000᰼\u0000ᱰ\u0000\u1ca4\u0000\u18fc\u0000᳘\u0000ᦘ\u0000ᴌ\u0000ᵀ\u0000ᵴ\u0000ᶨ\u0000ᷜ\u0000Ḑ\u0000Ṅ\u0000Ṹ\u0000Ậ\u0000Ỡ\u0000ἔ\u0000Ὀ\u0000ὼ\u0000ᾰ\u0000ῤ", offset, result);
        return result;
    }

    private static int zzUnpackRowMap(String packed, int offset, int[] result) {
        int i = 0;
        int j = offset;

        int high;
        for(int l = packed.length(); i < l; result[j++] = high | packed.charAt(i++)) {
            high = packed.charAt(i++) << 16;
        }

        return j;
    }

    private static int[] zzUnpackTrans() {
        int[] result = new int[8216];
        int offset = 0;
        zzUnpackTrans("\u0001\u0004\u0002\u0005\u0001\u0006\u0001\u0007\u0001\u0005\u0001\u0006\u0001\b\u0001\t\u0001\u0004\u0003\u0005\u0001\n\u0001\u0006\u0002\u0004\u0001\u000b\u0001\f\u0001\r\u0003\u0005\u0001\u000e\u0001\u0005\u0001\r\u0001\u000f\u0001\u0010\u0001\u0011\u0001\u0012\u0001\u0013\u0001\u0014\u0001\u0015\u0001\u0016\u0001\u0004\u0001\u0016\u0001\u0005\u0001\u0017\u0001\u0018\u0001\u0004\u0002\u0005\u0001\u0019\u0001\u0005\u0001\u001a\u0001\u001b\u0006\u0005\b\u001c\u0001\u001d\n\u001c\u0001\u001e\u0003\u001c\u0001\u001f\f\u001c\u0001 \u0003\u001c\u0001!\u000b\u001c\b\"\u0001#\u000e\"\u0001$\f\"\u0001%\u0003\"\u0001&\u000b\"5\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0003(\u0002\u0006\u0001(\u0001\u0006\u0002\u0000\u0004(\u0001\u0000\u0001\u0006\u0001\u0000\u0001(\u0003\u0000\u0001(\u0001)\u0002*\u0001+\u0001\u0000\u0001,\u0002(\u0001+\u0001(\u0001)\u0001(\u0003\u0000\u0003(\u0001\u0000\u0005(\u0001*\u0001(\u0001*\u0007(\u0001-\u0001.\u0001(\u0001.\u0002\u0000\u0004(\u0001\u0000\u0001.\u0001\u0000\u0001(\u0003\u0000\u0001/\u0001)\u0002*\u0001+\u0001\u0000\u0001,\u0002(\u0001+\u0001(\u0001)\u0001(\u0003\u0000\u0003(\u0001\u0000\u0005(\u0001*\u0001(\u0001*\u0003(\u0001/\u00070\u00011\u00012\u00013*0\b\n\u00014\u00015\u0003\n\u00016&\n\u0011\u0000\u0001\u000b4\u0000\u00017\u00018!\u0000\u0006\u0005\u0002\u0000\u0001'\u00019\u0002\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0003\u0005\u0001:\u0002\u0005\u0003\u0000\u0002\u0005\u0001;\u0001\u0000\f\u0005\u0003\u0000\u0002,\u0001\u0000\u0001,\u0007\u0000\u0001,&\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0002\u0005\u0001<\u0003\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0002\u0005\u0001=\u0003\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0001\u0005\u0001>\u0001\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0005\u0005\u0001?\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u001b\u0003\u0005\u0001@\u0001\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0002\u0005\u0001A\t\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0002\u0005\u0001B\u0003\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0005\u0001C\u0001\u0005\u0001D\u0002\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0001\u0005\u0001E\u0001\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0001F\u0002\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0003\u0005\u0001G\u0002\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0002\u0005\u0001H\u0003\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\b\u001c\u0001\u0000\n\u001c\u0001\u0000\u0003\u001c\u0001\u0000\f\u001c\u0001\u0000\u0003\u001c\u0001\u0000\u000b\u001c\u0012\u0000\u0001I<\u0000\u0001J\n\u0000\u0001K(\u0000\u0001L@\u0000\u0001M\u000b\u0000\b\"\u0001\u0000\u000e\"\u0001\u0000\f\"\u0001\u0000\u0003\"\u0001\u0000\u000b\"\u001b\u0000\u0001N\n\u0000\u0001O(\u0000\u0001P@\u0000\u0001Q\u0015\u0000\u0001R)\u0000\u0007(\u0002\u0000\u0004(\u0001\u0000\u0001(\u0001\u0000\u0001(\u0003\u0000\u0005(\u0002\u0000\u0006(\u0003\u0000\u0003(\u0001\u0000\u000f(\u0002S\u0001(\u0001S\u0002\u0000\u0004(\u0001\u0000\u0001S\u0001\u0000\u0001(\u0003\u0000\u0005(\u0001T\u0001\u0000\u0006(\u0003\u0000\u0003(\u0001\u0000\u000f(\u0002,\u0001(\u0001,\u0002\u0000\u0004(\u0001\u0000\u0001,\u0001\u0000\u0001(\u0003\u0000\u0002(\u0002*\u0001+\u0002\u0000\u0002(\u0001+\u0003(\u0003\u0000\u0003(\u0001\u0000\u0005(\u0001*\u0001(\u0001*\u0007(\u0002-\u0001(\u0001-\u0002\u0000\u0004(\u0001\u0000\u0001-\u0001\u0000\u0001(\u0003\u0000\u0002(\u0002*\u0001+\u0001\u0000\u0001,\u0002(\u0001+\u0003(\u0003\u0000\u0003(\u0001\u0000\u0005(\u0001*\u0001(\u0001*\u0007(\u0001-\u0001.\u0001(\u0001.\u0002\u0000\u0004(\u0001\u0000\u0001.\u0001\u0000\u0001(\u0003\u0000\u0001(\u0001U\u0002*\u0001+\u0001\u0000\u0001,\u0002(\u0001+\u0001(\u0001U\u0001(\u0003\u0000\u0003(\u0001\u0000\u0005(\u0001*\u0001(\u0001*\u0007(\u0004V\u0002\u0000\u0003(\u0001V\u0001\u0000\u0001V\u0001\u0000\u0001(\u0003\u0000\u0002(\u0003V\u0002\u0000\u0002(\u0002V\u0002(\u0003\u0000\u0003(\u0001\u0000\u0004(\u0002V\u0001(\u0001V\u0002(\u0001V\u0001(\u0007W\u0001X\u0001\u0000+W\u0007\u0000\u0001X,\u0000\u0004W\u0001Y\u0001W\u0001Z\u0001[\u0001\u0000\u00010\u0001\\\u00030\u0001Y\bW\u00010\u0003W\u00020\u0017W\t4\u0001]\u00034\u0001^*4\u0001\n\u00014\u0002\n\u0001\u0000\u0001\n\u0001_\u0004\n\b4\u0001\n\u00034\u0002\n\u00174\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0001\u0005\u0001`\u0001\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0004\u0005\u0001a\u0007\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0003\u0005\u0001b\b\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u000b\u0005\u0001c\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001d\u0002\u0005\u0001e\u0002\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001f\u0005\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0006\u0005\u0001g\u0005\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0004\u0005\u0001h\u0007\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0001\u0005\u0001i\n\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0001\u0005\u0001j\n\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0001\u0005\u0001f\u0001\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0002\u0005\u0001k\u0001\u0000\u0002\u0005\u0001l\t\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0005\u0001a\u0003\u0005\u0001m\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001n\u0005\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001o\u0005\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0005\u0001p\u0003\u0005\u0001q\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005%\u0000\u0001r-\u0000\u0001s/\u0000\u0001t@\u0000\u0001u0\u0000\u0001v-\u0000\u0001w/\u0000\u0001x@\u0000\u0001y\u000e\u0000\u0004z\u0005\u0000\u0001z\u0001\u0000\u0001z\u0007\u0000\u0003z\u0004\u0000\u0002z\r\u0000\u0002z\u0001\u0000\u0001z\u0002\u0000\u0001z\u0001\u0000\u0003(\u0002S\u0001(\u0001S\u0002\u0000\u0004(\u0001\u0000\u0001S\u0001\u0000\u0001(\u0003\u0000\u0002(\u0002*\u0001(\u0002\u0000\u0006(\u0003\u0000\u0003(\u0001\u0000\u0005(\u0001*\u0001(\u0001*\u0004(\u0003\u0000\u0002S\u0001\u0000\u0001S\u0007\u0000\u0001S%\u0000\u0003(\u0004V\u0002\u0000\u0003(\u0001V\u0001\u0000\u0001V\u0001\u0000\u0001(\u0003\u0000\u0001(\u0001U\u0003V\u0002\u0000\u0002(\u0002V\u0001U\u0001(\u0003\u0000\u0003(\u0001\u0000\u0004(\u0002V\u0001(\u0001V\u0002(\u0001V\u0001(\u0007W\u00011\u0001\u0000/W\u0001Z\u0001W\u0001Z\u0001X\u0001\u0000\u0005W\u0001Z)W\u00010\u0001W\u00010\u0001X\u0001\u0000\u0005W\u00010(W\u0004{\u00011\u0001\u0000\u0003W\u0001{\u0001W\u0001{\u0007W\u0003{\u0004W\u0002{\rW\u0002{\u0001W\u0001{\u0002W\u0001{\u0001W\b4\u0001\u0000.4\u0004|\u00024\u0001]\u00024\u0001|\u0001^\u0001|\u00074\u0003|\u00044\u0002|\r4\u0002|\u00014\u0001|\u00024\u0001|\u00014\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0004\u0005\u0001f\u0007\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0003\u0005\u0001H\u0002\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0004\u0005\u0001}\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0007\u0005\u0001~\u0001\u007f\u0001\u001b\u0002\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0080\u0005\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0002\u0005\u0001\u0081\t\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0004\u0005\u0001\u0082\u0001\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0003\u0005\u0001q\u0002\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0001\u0083\u0002\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0002\u0005\u0001\u0084\t\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0002\u0005\u0001\u0085\t\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0002\u0005\u0001\u0086\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0001\u0005\u0001\u0087\u0001\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0004\u0005\u0001\u0088\u0007\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0005\u0005\u0001q\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0002\u0005\u0001\u0089\u0003\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0005\u0001\u008a\u0004\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0003\u0005\u0001\u008b\u0002\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0002\u0005\u0001H\t\u0005'\u0000\u0001\u008c)\u0000\u0001r;\u0000\u0001\u008d(\u0000\u0001\u008e@\u0000\u0001\u008f)\u0000\u0001v;\u0000\u0001\u0090(\u0000\u0001\u0091\u001c\u0000\u0004\u0092\u0005\u0000\u0001\u0092\u0001\u0000\u0001\u0092\u0007\u0000\u0003\u0092\u0004\u0000\u0002\u0092\r\u0000\u0002\u0092\u0001\u0000\u0001\u0092\u0002\u0000\u0001\u0092\u0001\u0000\u0003W\u0004\u0093\u00011\u0001\u0000\u0003W\u0001\u0093\u0001W\u0001\u0093\u0007W\u0003\u0093\u0004W\u0002\u0093\rW\u0002\u0093\u0001W\u0001\u0093\u0002W\u0001\u0093\u0001W\u00034\u0004\u0094\u00024\u0001]\u00024\u0001\u0094\u0001^\u0001\u0094\u00074\u0003\u0094\u00044\u0002\u0094\r4\u0002\u0094\u00014\u0001\u0094\u00024\u0001\u0094\u00014\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0001\u0005\u0001\u0095\u0001\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0005\u0005\u0001?\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u00019\u0002\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0005\u0001C\u0001\u0005\u0001\u0096\u0002\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0002\u0005\u0001\u0082\t\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0005\u0001\u0097\u0004\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0003\u0005\u0001\u0098\u0002\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0004\u0005\u0001\u0099\u0001\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0005\u0001\u009a\u0004\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0004\u0005\u0001\u0080\u0007\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0004\u0005\u0001\u009b\u0007\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0002\u0005\u0001\u009c\u0003\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0002\u0005\u0001\u009d\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0002\u0005\u0001\u009e\t\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0004\u0005\u0001\u009f\u0007\u0005\u0012\u0000\u0001 A\u0000\u0001r\u0006\u0000\u0001\u008c\r\u0000\u0001\u008e\u0001¡\u0004\u008e\u0001¡\u0002\u0000\u0003\u008e\u0001\u0000\u0001\u008e\u0001\u0000\u0001¡\u0001\u0000\u0001\u008e\u0001¡\u0005\u008e\u0002¡\u0006\u008e\u0001\u0000\u0002¡\u0003\u008e\u0001¡\f\u008e\u0012\u0000\u0001¢A\u0000\u0001v\u0006\u0000\u0001\u008f\r\u0000\u0001\u0091\u0001£\u0004\u0091\u0001£\u0002\u0000\u0003\u0091\u0001\u0000\u0001\u0091\u0001\u0000\u0001£\u0001\u0000\u0001\u0091\u0001£\u0005\u0091\u0002£\u0006\u0091\u0001\u0000\u0002£\u0003\u0091\u0001£\f\u0091\u0003\u0000\u0004¤\u0005\u0000\u0001¤\u0001\u0000\u0001¤\u0007\u0000\u0003¤\u0004\u0000\u0002¤\r\u0000\u0002¤\u0001\u0000\u0001¤\u0002\u0000\u0001¤\u0001\u0000\u0003W\u0004¥\u00011\u0001\u0000\u0003W\u0001¥\u0001W\u0001¥\u0007W\u0003¥\u0004W\u0002¥\rW\u0002¥\u0001W\u0001¥\u0002W\u0001¥\u0001W\u00034\u0004¦\u00024\u0001]\u00024\u0001¦\u0001^\u0001¦\u00074\u0003¦\u00044\u0002¦\r4\u0002¦\u00014\u0001¦\u00024\u0001¦\u00014\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0006\u0005\u0001g\u0005\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0005\u0001a\u0004\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0001\u0005\u0001a\u0001\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0001\u0005\u0001§\u0001\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0001a\u0002\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0002\u0005\u0001¨\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0002\u0005\u0001©\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0005\u0005\u0001ª\u0006\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0005\u0001\u0080\u0004\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\n\u0005\u0001«\u0001\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001¬\u0005\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0012\u0000\u0001\u008e3\u0000\u0001\u0091$\u0000\u0004\u0005\u0005\u0000\u0001\u0005\u0001\u0000\u0001\u0005\u0007\u0000\u0003\u0005\u0004\u0000\u0002\u0005\r\u0000\u0002\u0005\u0001\u0000\u0001\u0005\u0002\u0000\u0001\u0005\u0001\u0000\u0003W\u00040\u00011\u0001\u0000\u0003W\u00010\u0001W\u00010\u0007W\u00030\u0004W\u00020\rW\u00020\u0001W\u00010\u0002W\u00010\u0001W\u00034\u0004\n\u00024\u0001]\u00024\u0001\n\u0001^\u0001\n\u00074\u0003\n\u00044\u0002\n\r4\u0002\n\u00014\u0001\n\u00024\u0001\n\u00014\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001q\u0005\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u00ad\u0005\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0001\u0005\u0001®\u0001\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0002\u0005\u0001¯\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0003\u0005\u0001m\u0002\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0002\u0005\u0001°\u0003\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0003\u0005\u0001q\b\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0003\u0005\u0001±\u0002\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0006\u0005\u0003\u0000\u0003\u0005\u0001\u0000\u0003\u0005\u0001²\b\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0001\u0005\u0001\u0082\u0004\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0004\u0005\u0001H\u0001\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005\u0001\u0000\u0006\u0005\u0002\u0000\u0001'\u0003\u0005\u0001\u0000\u0001\u0005\u0005\u0000\u0005\u0005\u0002\u0000\u0002\u0005\u0001\u0098\u0003\u0005\u0003\u0000\u0003\u0005\u0001\u0000\f\u0005", offset, result);
        return result;
    }

    private static int zzUnpackTrans(String packed, int offset, int[] result) {
        int i = 0;
        int j = offset;
        int l = packed.length();

        while(i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            value = value - 1;

            while(true) {
                result[j++] = value;
                --count;
                if (count <= 0) {
                    break;
                }
            }
        }

        return j;
    }

    private static int[] zzUnpackAttribute() {
        int[] result = new int[178];
        int offset = 0;
        zzUnpackAttribute("\u0003\u0000\u0001\t\u0004\u0001\u0001\t\u0003\u0001\u0001\t\b\u0001\u0001\t\u0006\u0001\u0001\t\u0005\u0001\u0001\t\u0003\u0001\u0001\u0000\t\u0001\u0001\t\u0001\u0000\u0003\u0001\u0003\t\u0010\u0001\u0001\t\t\u0000\u0001\u0001\u0001\u0000\u0003\u0001\u0001\t\u0005\u0001\u0001\t\u0013\u0001\t\u0000\u0011\u0001\u0002\u0000\u0001\u0001\u0002\u0000\u0001\u0001\u0001\u0000\r\u0001\u0005\u0000\u000e\u0001", offset, result);
        return result;
    }

    private static int zzUnpackAttribute(String packed, int offset, int[] result) {
        int i = 0;
        int j = offset;
        int l = packed.length();

        while(i < l) {
            int count = packed.charAt(i++);
            char value = packed.charAt(i++);

            while(true) {
                result[j++] = value;
                --count;
                if (count <= 0) {
                    break;
                }
            }
        }

        return j;
    }

    public CalangoTokenMaker() {
        this.zzLexicalState = 0;
        this.zzAtBOL = true;
    }

    private void addHyperlinkToken(int start, int end, int tokenType) {
        int so = start + this.offsetShift;
        this.addToken(this.zzBuffer, start, end, tokenType, so, true);
    }

    private void addToken(int tokenType) {
        this.addToken(this.zzStartRead, this.zzMarkedPos - 1, tokenType);
    }

    private void addToken(int start, int end, int tokenType) {
        int so = start + this.offsetShift;
        this.addToken(this.zzBuffer, start, end, tokenType, so, false);
    }

    public void addToken(char[] array, int start, int end, int tokenType, int startOffset, boolean hyperlink) {
        super.addToken(array, start, end, tokenType, startOffset, hyperlink);
        this.zzStartRead = this.zzMarkedPos;
    }

    public String[] getLineCommentStartAndEnd() {
        return null;
    }

    public Token getTokenList(Segment text, int initialTokenType, int startOffset) {
        this.resetTokenList();
        this.offsetShift = -text.offset + startOffset;
        int state;

        switch(initialTokenType) {
            case 2:
                state = 1;
                this.start = text.offset;
                break;
            default:
                state = 0;
        }

        this.s = text;

        try {
            this.yyreset(this.zzReader);
            this.yybegin(state);
            return this.yylex();
        } catch (IOException var6) {
            var6.printStackTrace();
            return new DefaultToken();
        }
    }

    private boolean zzRefill() {
        return this.zzCurrentPos >= this.s.offset + this.s.count;
    }

    public final void yyreset(Reader reader) {
        this.zzBuffer = this.s.array;
        this.zzStartRead = this.s.offset;
        this.zzEndRead = this.zzStartRead + this.s.count - 1;
        this.zzCurrentPos = this.zzMarkedPos = this.zzPushbackPos = this.s.offset;
        this.zzLexicalState = 0;
        this.zzReader = reader;
        this.zzAtBOL = true;
        this.zzAtEOF = false;
    }

    public CalangoTokenMaker(Reader in) {
        this.zzLexicalState = 0;
        this.zzAtBOL = true;
        this.zzReader = in;
    }

    public CalangoTokenMaker(InputStream in) {
        this((Reader)(new InputStreamReader(in)));
    }

    private static char[] zzUnpackCMap(String packed) {
        char[] map = new char[65536];
        int i = 0;
        int var3 = 0;

        while(i < 164) {
            int count = packed.charAt(i++);
            char value = packed.charAt(i++);

            while(true) {
                map[var3++] = value;
                --count;
                if (count <= 0) {
                    break;
                }
            }
        }

        return map;
    }

    public final void yyclose() throws IOException {
        this.zzAtEOF = true;
        this.zzEndRead = this.zzStartRead;
        if (this.zzReader != null) {
            this.zzReader.close();
        }

    }

    public final void yybegin(int newState) {
        this.zzLexicalState = newState;
    }

    public final String yytext() {
        return new String(this.zzBuffer, this.zzStartRead, this.zzMarkedPos - this.zzStartRead);
    }

    public final char yycharat(int pos) {
        return this.zzBuffer[this.zzStartRead + pos];
    }

    public final int yylength() {
        return this.zzMarkedPos - this.zzStartRead;
    }

    private void zzScanError(int errorCode) {
        String message;
        try {
            message = ZZ_ERROR_MSG[errorCode];
        } catch (ArrayIndexOutOfBoundsException var4) {
            message = ZZ_ERROR_MSG[0];
        }

        throw new Error(message);
    }

    public void yypushback(int number) {
        if (number > this.yylength()) {
            this.zzScanError(2);
        }

        this.zzMarkedPos -= number;
    }

    public Token yylex() throws IOException {
        int zzEndReadL = this.zzEndRead;
        char[] zzBufferL = this.zzBuffer;
        char[] zzCMapL = ZZ_CMAP;
        int[] zzTransL = ZZ_TRANS;
        int[] zzRowMapL = ZZ_ROWMAP;
        int[] zzAttrL = ZZ_ATTRIBUTE;

        while(true) {
            int zzMarkedPosL = this.zzMarkedPos;
            int zzAction = -1;
            int zzCurrentPosL = this.zzCurrentPos = this.zzStartRead = zzMarkedPosL;
            this.zzState = this.zzLexicalState;

            int zzInput;
            int temp;
            while(true) {
                if (zzCurrentPosL < zzEndReadL) {
                    zzInput = zzBufferL[zzCurrentPosL++];
                } else {
                    if (this.zzAtEOF) {
                        zzInput = -1;
                        break;
                    }

                    this.zzCurrentPos = zzCurrentPosL;
                    this.zzMarkedPos = zzMarkedPosL;
                    boolean eof = this.zzRefill();
                    zzCurrentPosL = this.zzCurrentPos;
                    zzMarkedPosL = this.zzMarkedPos;
                    zzBufferL = this.zzBuffer;
                    zzEndReadL = this.zzEndRead;
                    if (eof) {
                        zzInput = -1;
                        break;
                    }

                    zzInput = zzBufferL[zzCurrentPosL++];
                }

                temp = zzTransL[zzRowMapL[this.zzState] + zzCMapL[zzInput]];
                if (temp == -1) {
                    break;
                }

                this.zzState = temp;
                int zzAttributes = zzAttrL[this.zzState];
                if ((zzAttributes & 1) == 1) {
                    zzAction = this.zzState;
                    zzMarkedPosL = zzCurrentPosL;
                    if ((zzAttributes & 8) == 8) {
                        break;
                    }
                }
            }

            this.zzMarkedPos = zzMarkedPosL;
            switch(zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
                case 1:
                    this.addToken(15);
                    break;
                case 2:
                    this.addToken(7);
                    break;
                case 3:
                    this.addToken(26);
                    this.addNullToken();
                    return this.firstToken;
                case 4:
                    this.addNullToken();
                    return this.firstToken;
                case 5:
                    this.addToken(25);
                    this.addNullToken();
                    return this.firstToken;
                case 6:
                    this.addToken(16);
                    break;
                case 7:
                    this.addToken(18);
                    break;
                case 8:
                    this.addToken(17);
                case 9:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 34:
                case 35:
                case 36:
                case 37:
                case 38:
                case 39:
                case 40:
                case 41:
                case 42:
                case 43:
                case 44:
                case 45:
                case 46:
                case 47:
                case 48:
                case 49:
                case 50:
                    break;
                case 10:
                    this.addToken(this.start, this.zzStartRead - 1, 2);
                    return this.firstToken;
                case 11:
                    this.addToken(this.start, this.zzStartRead - 1, 1);
                    this.addNullToken();
                    return this.firstToken;
                case 12:
                    this.addToken(24);
                    break;
                case 13:
                    this.addToken(8);
                    break;
                case 14:
                    this.addToken(9);
                    break;
                case 15:
                    this.addToken(26);
                    break;
                case 16:
                    this.addToken(10);
                    break;
                case 17:
                    this.start = this.zzMarkedPos - 2;
                    this.yybegin(2);
                    break;
                case 18:
                    this.start = this.zzMarkedPos - 2;
                    this.yybegin(1);
                    break;
                case 19:
                    this.addToken(4);
                    break;
                case 20:
                    this.yybegin(0);
                    this.addToken(this.start, this.zzStartRead + 2 - 1, 2);
                    break;
                case 21:
                    this.addToken(11);
                    break;
                case 22:
                    this.addToken(25);
                    break;
                case 23:
                    this.addToken(13);
                    break;
                case 24:
                    temp = this.zzStartRead;
                    this.addToken(this.start, this.zzStartRead - 1, 2);
                    this.addHyperlinkToken(temp, this.zzMarkedPos - 1, 2);
                    this.start = this.zzMarkedPos;
                    break;
                case 25:
                    temp = this.zzStartRead;
                    this.addToken(this.start, this.zzStartRead - 1, 1);
                    this.addHyperlinkToken(temp, this.zzMarkedPos - 1, 1);
                    this.start = this.zzMarkedPos;
                    break;
                default:
                    if (zzInput == -1 && this.zzStartRead == this.zzCurrentPos) {
                        this.zzAtEOF = true;
                        switch(this.zzLexicalState) {
                            case 0:
                                this.addNullToken();
                                return this.firstToken;
                            case 1:
                                this.addToken(this.start, this.zzStartRead - 1, 2);
                                return this.firstToken;
                            case 2:
                                this.addToken(this.start, this.zzStartRead - 1, 1);
                                this.addNullToken();
                                return this.firstToken;
                            case 179:
                            case 180:
                            case 181:
                                break;
                            default:
                                return null;
                        }
                    } else {
                        this.zzScanError(1);
                    }
            }
        }
    }

    // $FF: synthetic method
    // $FF: bridge method
    public int getLastTokenTypeOnLine(Segment var1, int var2) {
        return super.getLastTokenTypeOnLine(var1, var2);
    }

    // $FF: synthetic method
    // $FF: bridge method
    public boolean isWhitespaceVisible() {
        return super.isWhitespaceVisible();
    }

    // $FF: synthetic method
    // $FF: bridge method
    public void setWhitespaceVisible(boolean var1) {
        super.setWhitespaceVisible(var1);
    }

    // $FF: synthetic method
    // $FF: bridge method
    public boolean getMarkOccurrencesOfTokenType(int var1) {
        return super.getMarkOccurrencesOfTokenType(var1);
    }

    // $FF: synthetic method
    // $FF: bridge method
    public void addToken(char[] var1, int var2, int var3, int var4, int var5) {
        super.addToken(var1, var2, var3, var4, var5);
    }

    // $FF: synthetic method
    // $FF: bridge method
    public void addToken(Segment var1, int var2, int var3, int var4, int var5) {
        super.addToken(var1, var2, var3, var4, var5);
    }

    // $FF: synthetic method
    // $FF: bridge method
    public void addNullToken() {
        super.addNullToken();
    }

    // $FF: synthetic method
    // $FF: bridge method
    public boolean isMarkupLanguage() {
        return super.isMarkupLanguage();
    }
}

